{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";const baseQueryWithReauth=async(args,api,extraOptions)=>{var _result,_result$error;let result=await fetchBaseQuery({baseUrl:\"https://gym-backend-production-65cc.up.railway.app/\",prepareHeaders:headers=>{headers.set(\"Authorization\",localStorage.getItem(\"access\"));headers.set(\"Content-Type\",\"application/json\");return headers;}})(args,api,extraOptions);// If the response is 401 (Unauthorized), try to refresh the token\nif(((_result=result)===null||_result===void 0?void 0:(_result$error=_result.error)===null||_result$error===void 0?void 0:_result$error.status)===401){const refreshToken=localStorage.getItem(\"refresh\");// Call the refresh token endpoint to get a new access token\nconst refreshResult=await fetchBaseQuery({baseUrl:\"https://gym-backend-production-65cc.up.railway.app/\",method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:refreshToken}})({url:\"auth/refresh-token\"},api,extraOptions);if(refreshResult!==null&&refreshResult!==void 0&&refreshResult.data){// Save the new access token\nconsole.log(refreshResult.data);localStorage.setItem(\"access\",refreshResult.data.data.access_token);localStorage.setItem(\"refresh\",refreshResult.data.data.refresh_token);// Retry the original request with the new access token\nresult=await fetchBaseQuery({baseUrl:\"https://gym-backend-production-65cc.up.railway.app/\",prepareHeaders:headers=>{headers.set(\"Authorization\",refreshResult.data.data.access_token);headers.set(\"Content-Type\",\"application/json\");return headers;}})(args,api,extraOptions);}else{// If refreshing the token fails, log the user out or handle the failure\n// Optionally, you could dispatch an action to clear auth state\n}}return result;};export const apis=createApi({reducerPath:\"apis\",baseQuery:baseQueryWithReauth,endpoints:builder=>({getAllMembers:builder.query({query:()=>`members`}),getEmployees:builder.query({query:params=>`employee${params}`}),getAllMembersAtOnce:builder.query({query:()=>`members?paginate=false`}),getMeasurements:builder.query({query:_ref=>{let{page,page_size}=_ref;return`members/measurements?page=${page}&page_size=${page_size}`;}}),addMeasurements:builder.mutation({query:data=>({url:\"members/measurements\",method:\"POST\",body:JSON.stringify(data)})}),deleteMeasurement:builder.mutation({query:id=>({url:`members/measurements/${id}`,method:\"DELETE\"})}),loginAdmin:builder.mutation({query:data=>({url:\"auth/login\",method:\"POST\",body:JSON.stringify(data)})}),getGroupsMembers:builder.query({query:params=>`members/sessions/${params}`}),postSession:builder.mutation({query:data=>({url:\"sessions\",method:\"POST\",body:JSON.stringify(data)})}),getSessions:builder.query({query:params=>`sessions/${params}`}),postSessionMember:builder.mutation({query:data=>({url:\"members/sessions/\",method:\"POST\",body:JSON.stringify(data)})}),editSession:builder.mutation({query:_ref2=>{let{id,data}=_ref2;return{url:`sessions/${id}`,method:\"PUT\",body:JSON.stringify(data)};}}),patchSession:builder.mutation({query:_ref3=>{let{id,data}=_ref3;return{url:`sessions/${id}/`,method:\"PATCH\",body:JSON.stringify(data)};}}),postSchedule:builder.mutation({query:data=>({url:\"schedules\",method:\"POST\",body:JSON.stringify(data)})}),getSchedules:builder.query({query:params=>`schedules/${params}`}),patchSchedule:builder.mutation({query:_ref4=>{let{id,data}=_ref4;return{url:`schedules/${id}/`,method:\"PATCH\",body:JSON.stringify(data)};}}),search:builder.query({query:data=>`${data}`})})});export const{useGetAllMembersQuery,useGetAllMembersAtOnceQuery,useGetMeasurementsQuery,useLoginAdminMutation,useAddMeasurementsMutation,useGetGroupsMembersQuery,usePostSessionMutation,useGetSessionsQuery,usePostScheduleMutation,useGetEmployeesQuery,useLazyGetSchedulesQuery,useLazySearchQuery,usePostSessionMemberMutation,useDeleteMeasurementMutation,useEditSessionMutation,usePatchSessionMutation,usePatchScheduleMutation}=apis;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseQueryWithReauth","args","api","extraOptions","_result","_result$error","result","baseUrl","prepareHeaders","headers","set","localStorage","getItem","error","status","refreshToken","refreshResult","method","Authorization","url","data","console","log","setItem","access_token","refresh_token","apis","reducerPath","baseQuery","endpoints","builder","getAllMembers","query","getEmployees","params","getAllMembersAtOnce","getMeasurements","_ref","page","page_size","addMeasurements","mutation","body","JSON","stringify","deleteMeasurement","id","loginAdmin","getGroupsMembers","postSession","getSessions","postSessionMember","editSession","_ref2","patchSession","_ref3","postSchedule","getSchedules","patchSchedule","_ref4","search","useGetAllMembersQuery","useGetAllMembersAtOnceQuery","useGetMeasurementsQuery","useLoginAdminMutation","useAddMeasurementsMutation","useGetGroupsMembersQuery","usePostSessionMutation","useGetSessionsQuery","usePostScheduleMutation","useGetEmployeesQuery","useLazyGetSchedulesQuery","useLazySearchQuery","usePostSessionMemberMutation","useDeleteMeasurementMutation","useEditSessionMutation","usePatchSessionMutation","usePatchScheduleMutation"],"sources":["C:/Users/T.B/Coding/Gym-FrontEnd/src/features/api.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\r\n  let result = await fetchBaseQuery({\r\n    baseUrl: \"https://gym-backend-production-65cc.up.railway.app/\",\r\n    prepareHeaders: (headers) => {\r\n      headers.set(\"Authorization\", localStorage.getItem(\"access\"));\r\n      headers.set(\"Content-Type\", \"application/json\");\r\n      return headers;\r\n    },\r\n  })(args, api, extraOptions);\r\n\r\n  // If the response is 401 (Unauthorized), try to refresh the token\r\n  if (result?.error?.status === 401) {\r\n    const refreshToken = localStorage.getItem(\"refresh\");\r\n\r\n    // Call the refresh token endpoint to get a new access token\r\n    const refreshResult = await fetchBaseQuery({\r\n      baseUrl: \"https://gym-backend-production-65cc.up.railway.app/\",\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: refreshToken,\r\n      },\r\n    })({ url: \"auth/refresh-token\" }, api, extraOptions);\r\n\r\n    if (refreshResult?.data) {\r\n      // Save the new access token\r\n      console.log(refreshResult.data);\r\n      localStorage.setItem(\"access\", refreshResult.data.data.access_token);\r\n      localStorage.setItem(\"refresh\", refreshResult.data.data.refresh_token);\r\n\r\n      // Retry the original request with the new access token\r\n      result = await fetchBaseQuery({\r\n        baseUrl: \"https://gym-backend-production-65cc.up.railway.app/\",\r\n        prepareHeaders: (headers) => {\r\n          headers.set(\"Authorization\", refreshResult.data.data.access_token);\r\n          headers.set(\"Content-Type\", \"application/json\");\r\n          return headers;\r\n        },\r\n      })(args, api, extraOptions);\r\n    } else {\r\n      // If refreshing the token fails, log the user out or handle the failure\r\n      // Optionally, you could dispatch an action to clear auth state\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const apis = createApi({\r\n  reducerPath: \"apis\",\r\n  baseQuery: baseQueryWithReauth,\r\n  endpoints: (builder) => ({\r\n    getAllMembers: builder.query({\r\n      query: () => `members`,\r\n    }),\r\n    getEmployees: builder.query({\r\n      query: (params) => `employee${params}`,\r\n    }),\r\n    getAllMembersAtOnce: builder.query({\r\n      query: () => `members?paginate=false`,\r\n    }),\r\n    getMeasurements: builder.query({\r\n      query: ({ page, page_size }) =>\r\n        `members/measurements?page=${page}&page_size=${page_size}`,\r\n    }),\r\n    addMeasurements: builder.mutation({\r\n      query: (data) => ({\r\n        url: \"members/measurements\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    deleteMeasurement: builder.mutation({\r\n      query: (id) => ({\r\n        url: `members/measurements/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n    }),\r\n    loginAdmin: builder.mutation({\r\n      query: (data) => ({\r\n        url: \"auth/login\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    getGroupsMembers: builder.query({\r\n      query: (params) => `members/sessions/${params}`,\r\n    }),\r\n    postSession: builder.mutation({\r\n      query: (data) => ({\r\n        url: \"sessions\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    getSessions: builder.query({\r\n      query: (params) => `sessions/${params}`,\r\n    }),\r\n    postSessionMember: builder.mutation({\r\n      query: (data) => ({\r\n        url: \"members/sessions/\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    editSession: builder.mutation({\r\n      query: ({ id, data }) => ({\r\n        url: `sessions/${id}`,\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    patchSession: builder.mutation({\r\n      query: ({ id, data }) => ({\r\n        url: `sessions/${id}/`,\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    postSchedule: builder.mutation({\r\n      query: (data) => ({\r\n        url: \"schedules\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    getSchedules: builder.query({\r\n      query: (params) => `schedules/${params}`,\r\n    }),\r\n    patchSchedule: builder.mutation({\r\n      query: ({ id, data }) => ({\r\n        url: `schedules/${id}/`,\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(data),\r\n      }),\r\n    }),\r\n    search: builder.query({\r\n      query: (data) => `${data}`,\r\n    }),\r\n  }),\r\n});\r\nexport const {\r\n  useGetAllMembersQuery,\r\n  useGetAllMembersAtOnceQuery,\r\n  useGetMeasurementsQuery,\r\n  useLoginAdminMutation,\r\n  useAddMeasurementsMutation,\r\n  useGetGroupsMembersQuery,\r\n  usePostSessionMutation,\r\n  useGetSessionsQuery,\r\n  usePostScheduleMutation,\r\n  useGetEmployeesQuery,\r\n  useLazyGetSchedulesQuery,\r\n  useLazySearchQuery,\r\n  usePostSessionMemberMutation,\r\n  useDeleteMeasurementMutation,\r\n  useEditSessionMutation,\r\n  usePatchSessionMutation,\r\n  usePatchScheduleMutation,\r\n} = apis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}