{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";// import styles from \"./EditGroupMember.module.css\";\n// import InputField from \"../../Common Components/InputField/InputField\";\n// import { Formik, Form, useFormikContext } from \"formik\";\n// import * as Yup from \"yup\";\n// import MainButton from \"../../Common Components/Main Button/MainButton\";\n// import ComponentTitle from \"../../Common Components/ComponentTitle/ComponentTitle\";\n// import {\n//   useGetAllMembersQuery,\n//   useLazyGetSchedulesQuery,\n//   useGetSessionsQuery,\n//   usePostSessionMemberMutation,\n// } from \"../../features/api\";\n// import { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// const DynamicComponent = () => {\n//   const { values } = useFormikContext();\n//   const {\n//     data: members,\n//     isLoading: isMembersLoading,\n//     error: membersError,\n//   } = useGetAllMembersQuery();\n//   const {\n//     data: sessions,\n//     isLoading: isSessionsLoading,\n//     error: sessionsError,\n//   } = useGetSessionsQuery(\"\");\n//   console.log(sessions?.data);\n//   const [getSchedules, { data: schedulesData }] = useLazyGetSchedulesQuery();\n//   console.log(schedulesData?.data?.schedules);\n//   const [sessionSchedules, setSesstionSchedules] = useState([]);\n//   useEffect(() => {\n//     if (values.group !== \"\") {\n//       (async () => {\n//         try {\n//           const response = await getSchedules(\n//             `?filter{session.id}=${values.group}`\n//           );\n//           console.log(response.data.data.schedules);\n//           setSesstionSchedules([]);\n//           for (let i = 0; i < response?.data.data?.schedules.length; i++) {\n//             const newArray = [];\n//             for (const key in response.data.data.schedules[i]) {\n//               if (\n//                 key === \"saturday\" ||\n//                 key === \"sunday\" ||\n//                 key === \"monday\" ||\n//                 key === \"tuesday\" ||\n//                 key === \"wednesday\" ||\n//                 key === \"thursday\" ||\n//                 key === \"friday\"\n//               ) {\n//                 console.log(key);\n//                 console.log(response.data.data.schedules[i][key]);\n//                 if (response.data.data.schedules[i][key]) {\n//                   newArray.push(\n//                     ` [${key}: ${response.data.data.schedules[i][key]}] `\n//                   );\n//                 }\n//               }\n//             }\n//             setSesstionSchedules((prev) => [...prev, newArray]);\n//           }\n//         } catch (error) {\n//           console.error(error.message);\n//         }\n//       })();\n//     }\n//   }, [values.group, getSchedules]);\n//   if (isSessionsLoading || isMembersLoading) {\n//     return (\n//       <div className=\"d-flex justify-content-center align-items-center text-primary fs-3 fw-bold\">\n//         جاري التحميل...\n//       </div>\n//     );\n//   }\n//   if (membersError || sessionsError) {\n//     return (\n//       <div className=\"d-flex justify-content-center align-items-center text-danger fs-3 fw-bold\">\n//         حدث خطأ برجاء المحاولة مرة أخرى.\n//       </div>\n//     );\n//   }\n//   return (\n//     <>\n//       <div className={`row`}>\n//         <div className={`col-6`}>\n//           <InputField name=\"name\" label=\"اسم العضو\" inputType={\"select\"}>\n//             <option value={\"\"}>اختر</option>\n//             {members?.data?.users?.map((member, i) => (\n//               <option value={member.id} key={i}>\n//                 {member.name}\n//               </option>\n//             ))}\n//           </InputField>\n//         </div>\n//         <div className={`col-6`}>\n//           <InputField name=\"group\" label=\"اسم المجموعة\" inputType={\"select\"}>\n//             <option value={\"\"}>اختر</option>\n//             {sessions?.data?.sessions?.map((session, i) => (\n//               <option value={session.id} key={i}>\n//                 {session.name}\n//               </option>\n//             ))}\n//           </InputField>\n//         </div>\n//       </div>\n//       <div className={`row`}>\n//         <div className={`col-6`}>\n//           <InputField name=\"schedule\" label=\"الموعد\" inputType={\"select\"}>\n//             <option value={\"\"}>اختر</option>\n//             {sessionSchedules?.map((schedule, i) => (\n//               <option value={schedulesData?.data?.schedules[i]?.id} key={i}>\n//                 {schedule}\n//               </option>\n//             ))}\n//           </InputField>\n//         </div>\n//         <div className={`col-6`}>\n//           <InputField name=\"price\" label=\"السعر\" />\n//         </div>\n//       </div>\n//       <div className={`row`}>\n//         <div className={`col-6`}>\n//           <InputField name=\"discount\" label=\"الخصم\" />\n//         </div>\n//         <div className={`col-6`}>\n//           <InputField name=\"payed\" label=\"المدفوع\" />\n//         </div>\n//       </div>\n//       <div className={`row`}>\n//         <div className={`col-6`}>\n//           <InputField\n//             name=\"start_date\"\n//             label=\"تاريخ البداية\"\n//             inputType={\"input\"}\n//             type={\"date\"}\n//           />\n//         </div>\n//         <div className={`col-6`}>\n//           <InputField\n//             name=\"end_date\"\n//             label=\"تاريخ النهاية\"\n//             inputType={\"input\"}\n//             type={\"date\"}\n//           />\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n// const EditGroupMember = () => {\n//   const initialValues = {\n//     name: 0,\n//     group: 0,\n//     schedule: 0,\n//     price: 0,\n//     discount: 0,\n//     payed: 0,\n//     start_date: \"\",\n//     end_date: \"\",\n//   };\n//   const validationSchema = Yup.object({\n//     name: Yup.string().required(\"هذا الحقل الزامي\"),\n//     group: Yup.string().required(\"هذا الحقل الزامي\"),\n//     schedule: Yup.string().required(\"هذا الحقل الزامي\"),\n//     price: Yup.number().required(\"هذا الحقل الزامي\"),\n//     discount: Yup.number().required(\"هذا الحقل الزامي\"),\n//     payed: Yup.number().required(\"هذا الحقل الزامي\"),\n//     start_date: Yup.date().required(\"هذا الحقل الزامي\"),\n//     end_date: Yup.date().required(\"هذا الحقل الزامي\"),\n//   });\n//   const [postSessionMember] = usePostSessionMemberMutation();\n//   const navigate = useNavigate();\n//   const handleSubmit = async (values) => {\n//     console.log(values);\n//     const data = {\n//       schedule: values.schedule,\n//       user: values.name,\n//       status: \"active\",\n//       discount: values.discount,\n//       start_date: values.start_date,\n//     };\n//     try {\n//       const response = await postSessionMember(data);\n//       console.log(response);\n//       navigate(\"/Home/GroupsContainer\");\n//     } catch (err) {\n//       console.error(err.message);\n//     }\n//   };\n//   return (\n//     <div className={`${styles.addGroupMemberForm}`}>\n//       <ComponentTitle\n//         MainIcon={\"/assets/image/groups.png\"}\n//         title={\"إضافة عضو للمجموعة\"}\n//         subTitle={\"يمكنك إضافة عضو لمجموعة من هنا\"}\n//       />\n//       <div className=\"container bg-white p-4 rounded-4\">\n//         <Formik\n//           initialValues={initialValues}\n//           validationSchema={validationSchema}\n//           onSubmit={handleSubmit}\n//         >\n//           {({ values }) => {\n//             return (\n//               <Form className={`d-grid gap-3`}>\n//                 <DynamicComponent />\n//                 <div className=\"row text-center mt-4\">\n//                   <MainButton\n//                     text={\"اضافة\"}\n//                     btnWidth={\"200px\"}\n//                     btnType={\"submit\"}\n//                   />\n//                 </div>\n//               </Form>\n//             );\n//           }}\n//         </Formik>\n//       </div>\n//     </div>\n//   );\n// };\n// export default EditGroupMember;\nconst EditGroupMember=()=>{return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center fs-1 text-primary fw-bold\",children:\"Edit Group Member\"});};export default EditGroupMember;","map":{"version":3,"names":["EditGroupMember","_jsx","className","children"],"sources":["C:/Users/T.B/Coding/Gym-FrontEnd/src/Component/EditGroupMember/EditGroupMember.js"],"sourcesContent":["// import styles from \"./EditGroupMember.module.css\";\r\n// import InputField from \"../../Common Components/InputField/InputField\";\r\n// import { Formik, Form, useFormikContext } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import MainButton from \"../../Common Components/Main Button/MainButton\";\r\n// import ComponentTitle from \"../../Common Components/ComponentTitle/ComponentTitle\";\r\n// import {\r\n//   useGetAllMembersQuery,\r\n//   useLazyGetSchedulesQuery,\r\n//   useGetSessionsQuery,\r\n//   usePostSessionMemberMutation,\r\n// } from \"../../features/api\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const DynamicComponent = () => {\r\n//   const { values } = useFormikContext();\r\n//   const {\r\n//     data: members,\r\n//     isLoading: isMembersLoading,\r\n//     error: membersError,\r\n//   } = useGetAllMembersQuery();\r\n\r\n//   const {\r\n//     data: sessions,\r\n//     isLoading: isSessionsLoading,\r\n//     error: sessionsError,\r\n//   } = useGetSessionsQuery(\"\");\r\n//   console.log(sessions?.data);\r\n//   const [getSchedules, { data: schedulesData }] = useLazyGetSchedulesQuery();\r\n\r\n//   console.log(schedulesData?.data?.schedules);\r\n\r\n//   const [sessionSchedules, setSesstionSchedules] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     if (values.group !== \"\") {\r\n//       (async () => {\r\n//         try {\r\n//           const response = await getSchedules(\r\n//             `?filter{session.id}=${values.group}`\r\n//           );\r\n//           console.log(response.data.data.schedules);\r\n//           setSesstionSchedules([]);\r\n//           for (let i = 0; i < response?.data.data?.schedules.length; i++) {\r\n//             const newArray = [];\r\n//             for (const key in response.data.data.schedules[i]) {\r\n//               if (\r\n//                 key === \"saturday\" ||\r\n//                 key === \"sunday\" ||\r\n//                 key === \"monday\" ||\r\n//                 key === \"tuesday\" ||\r\n//                 key === \"wednesday\" ||\r\n//                 key === \"thursday\" ||\r\n//                 key === \"friday\"\r\n//               ) {\r\n//                 console.log(key);\r\n//                 console.log(response.data.data.schedules[i][key]);\r\n//                 if (response.data.data.schedules[i][key]) {\r\n//                   newArray.push(\r\n//                     ` [${key}: ${response.data.data.schedules[i][key]}] `\r\n//                   );\r\n//                 }\r\n//               }\r\n//             }\r\n//             setSesstionSchedules((prev) => [...prev, newArray]);\r\n//           }\r\n//         } catch (error) {\r\n//           console.error(error.message);\r\n//         }\r\n//       })();\r\n//     }\r\n//   }, [values.group, getSchedules]);\r\n\r\n//   if (isSessionsLoading || isMembersLoading) {\r\n//     return (\r\n//       <div className=\"d-flex justify-content-center align-items-center text-primary fs-3 fw-bold\">\r\n//         جاري التحميل...\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (membersError || sessionsError) {\r\n//     return (\r\n//       <div className=\"d-flex justify-content-center align-items-center text-danger fs-3 fw-bold\">\r\n//         حدث خطأ برجاء المحاولة مرة أخرى.\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <div className={`row`}>\r\n//         <div className={`col-6`}>\r\n//           <InputField name=\"name\" label=\"اسم العضو\" inputType={\"select\"}>\r\n//             <option value={\"\"}>اختر</option>\r\n//             {members?.data?.users?.map((member, i) => (\r\n//               <option value={member.id} key={i}>\r\n//                 {member.name}\r\n//               </option>\r\n//             ))}\r\n//           </InputField>\r\n//         </div>\r\n//         <div className={`col-6`}>\r\n//           <InputField name=\"group\" label=\"اسم المجموعة\" inputType={\"select\"}>\r\n//             <option value={\"\"}>اختر</option>\r\n//             {sessions?.data?.sessions?.map((session, i) => (\r\n//               <option value={session.id} key={i}>\r\n//                 {session.name}\r\n//               </option>\r\n//             ))}\r\n//           </InputField>\r\n//         </div>\r\n//       </div>\r\n//       <div className={`row`}>\r\n//         <div className={`col-6`}>\r\n//           <InputField name=\"schedule\" label=\"الموعد\" inputType={\"select\"}>\r\n//             <option value={\"\"}>اختر</option>\r\n//             {sessionSchedules?.map((schedule, i) => (\r\n//               <option value={schedulesData?.data?.schedules[i]?.id} key={i}>\r\n//                 {schedule}\r\n//               </option>\r\n//             ))}\r\n//           </InputField>\r\n//         </div>\r\n//         <div className={`col-6`}>\r\n//           <InputField name=\"price\" label=\"السعر\" />\r\n//         </div>\r\n//       </div>\r\n//       <div className={`row`}>\r\n//         <div className={`col-6`}>\r\n//           <InputField name=\"discount\" label=\"الخصم\" />\r\n//         </div>\r\n//         <div className={`col-6`}>\r\n//           <InputField name=\"payed\" label=\"المدفوع\" />\r\n//         </div>\r\n//       </div>\r\n//       <div className={`row`}>\r\n//         <div className={`col-6`}>\r\n//           <InputField\r\n//             name=\"start_date\"\r\n//             label=\"تاريخ البداية\"\r\n//             inputType={\"input\"}\r\n//             type={\"date\"}\r\n//           />\r\n//         </div>\r\n//         <div className={`col-6`}>\r\n//           <InputField\r\n//             name=\"end_date\"\r\n//             label=\"تاريخ النهاية\"\r\n//             inputType={\"input\"}\r\n//             type={\"date\"}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const EditGroupMember = () => {\r\n//   const initialValues = {\r\n//     name: 0,\r\n//     group: 0,\r\n//     schedule: 0,\r\n//     price: 0,\r\n//     discount: 0,\r\n//     payed: 0,\r\n//     start_date: \"\",\r\n//     end_date: \"\",\r\n//   };\r\n//   const validationSchema = Yup.object({\r\n//     name: Yup.string().required(\"هذا الحقل الزامي\"),\r\n//     group: Yup.string().required(\"هذا الحقل الزامي\"),\r\n//     schedule: Yup.string().required(\"هذا الحقل الزامي\"),\r\n//     price: Yup.number().required(\"هذا الحقل الزامي\"),\r\n//     discount: Yup.number().required(\"هذا الحقل الزامي\"),\r\n//     payed: Yup.number().required(\"هذا الحقل الزامي\"),\r\n//     start_date: Yup.date().required(\"هذا الحقل الزامي\"),\r\n//     end_date: Yup.date().required(\"هذا الحقل الزامي\"),\r\n//   });\r\n\r\n//   const [postSessionMember] = usePostSessionMemberMutation();\r\n//   const navigate = useNavigate();\r\n//   const handleSubmit = async (values) => {\r\n//     console.log(values);\r\n//     const data = {\r\n//       schedule: values.schedule,\r\n//       user: values.name,\r\n//       status: \"active\",\r\n//       discount: values.discount,\r\n//       start_date: values.start_date,\r\n//     };\r\n//     try {\r\n//       const response = await postSessionMember(data);\r\n//       console.log(response);\r\n//       navigate(\"/Home/GroupsContainer\");\r\n//     } catch (err) {\r\n//       console.error(err.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`${styles.addGroupMemberForm}`}>\r\n//       <ComponentTitle\r\n//         MainIcon={\"/assets/image/groups.png\"}\r\n//         title={\"إضافة عضو للمجموعة\"}\r\n//         subTitle={\"يمكنك إضافة عضو لمجموعة من هنا\"}\r\n//       />\r\n//       <div className=\"container bg-white p-4 rounded-4\">\r\n//         <Formik\r\n//           initialValues={initialValues}\r\n//           validationSchema={validationSchema}\r\n//           onSubmit={handleSubmit}\r\n//         >\r\n//           {({ values }) => {\r\n//             return (\r\n//               <Form className={`d-grid gap-3`}>\r\n//                 <DynamicComponent />\r\n//                 <div className=\"row text-center mt-4\">\r\n//                   <MainButton\r\n//                     text={\"اضافة\"}\r\n//                     btnWidth={\"200px\"}\r\n//                     btnType={\"submit\"}\r\n//                   />\r\n//                 </div>\r\n//               </Form>\r\n//             );\r\n//           }}\r\n//         </Formik>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditGroupMember;\r\n\r\nconst EditGroupMember = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center fs-1 text-primary fw-bold\">\r\n      Edit Group Member\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupMember;\r\n"],"mappingseAAe,CAAGA,CAAA,GAAM,CAC5B,mBACEC,IAAA,QAAKC,SAAS,CAAC,4EAA4E,CAAAC,QAAA,CAAC,mBAE5F,CAAK,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}